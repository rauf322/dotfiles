// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+r",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+escape",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },

    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "f",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+z",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+tab",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!explorerViewletVisible"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible"
    },
    {
        "key": "alt+shift+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "alt+shift+x", // You can change this to your preferred keybinding
        "command": "workbench.view.extensions",
        "when": "workbench.scm.active"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+i",
        "command": "composerMode.agent"
    },
    {
        "key": "cmd+d",
        "command": "-composer.toggleChatAsEditor",
        "when": "composerFocused"
    },
    {
        "key": "cmd+d",
        "command": "-notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+a s",
        "command": "workbench.action.openSettings",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a shift+\\",
        "command": "workbench.action.newGroupRight",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a -",
        "command": "workbench.action.newGroupBelow",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a x",
        "command": "workbench.action.closeEditorsAndGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a f",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a h",
        "command": "workbench.action.focusPreviousGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a l",
        "command": "workbench.action.focusNextGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a k",
        "command": "workbench.action.focusAboveGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a j",
        "command": "workbench.action.focusBelowGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+a c",
        "command": "vscode.newWindow",
        "when": "!terminalFocus"
    },
]

